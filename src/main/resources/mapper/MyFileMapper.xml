<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xusenme.dao.MyFileDao">

    <resultMap id="MyFileResultMap" type="com.xusenme.model.MyFile">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="filename" jdbcType="VARCHAR" property="filename"/>
        <result column="size" jdbcType="INTEGER" property="size"/>
        <result column="md5" jdbcType="VARCHAR" property="md5"/>
        <result column="fastdfsPath" jdbcType="VARCHAR" property="fastdfsPath"/>
        <result column="active" jdbcType="INTEGER" property="active"/>
        <collection property="user" ofType="com.xusenme.model.User">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="username" jdbcType="VARCHAR" property="username"/>
            <result column="email" jdbcType="VARCHAR" property="email"/>
        </collection>
    </resultMap>


    <resultMap id="ShareResultMap" type="com.xusenme.model.Share">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="shareId" jdbcType="VARCHAR" property="shareId"/>
        <result column="fileId" jdbcType="VARCHAR" property="fileId"/>
        <result column="shareType" jdbcType="VARCHAR" property="shareType"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <collection property="myFile" ofType="com.xusenme.model.MyFile">
            <id column="id" jdbcType="VARCHAR" property="id"/>
            <result column="filename" jdbcType="VARCHAR" property="filename"/>
            <result column="fastdfsPath" jdbcType="VARCHAR" property="fastdfsPath"/>
            <result column="size" jdbcType="VARCHAR" property="size"/>
            <result column="folder" jdbcType="VARCHAR" property="folder"/>
        </collection>
    </resultMap>


    <select id="getShareById" resultMap="ShareResultMap">
        select
            share.id as id,
            share.shareId as shareId,
            share.`password` as password,
            share.shareType as shareType,
            share.email as email,
            file.id as id,
            file.filename as filename,
            file.fastdfsPath as fastdfsPath,
            file.size as size,
            file.folder as folder
        from share left join file on share.fileId = file.id
        where share.shareId = #{shareId}

    </select>


    <select id="getMyFileByMd5" parameterType="String" resultType="com.xusenme.model.MyFile">
		select * from file where md5 = #{md5} limit 1;
	</select>

    <select id="getMyFileById" parameterType="String" resultType="com.xusenme.model.MyFile">
		select * from file where id = #{id} limit 1;
	</select>

    <update id="deleteFile" parameterType="String">
        update file set isDelete=1,deleteTime=now() where id = #{id};
    </update>


    <insert id="saveMyFile" parameterType="com.xusenme.model.MyFile">
		insert into file(id,filename,size,md5,fastdfsPath) values(#{id},#{filename},#{size},#{md5},#{fastdfsPath})
	</insert>

    <insert id="saveUserFile">
		insert into user_file(id,userId,fileId,dir) values(#{arg0},#{arg1},#{arg2},#{arg3})
	</insert>


    <select id="getAllMyFile" resultMap="MyFileResultMap">
		select
            file.id as id,
            file.filename as filename,
            file.size as size,
            file.md5 as md5,
            file.fastdfsPath as fastdfsPath,
            file.active as active,
            user.username as username,
            user.email as email
        from file left join user_file on file.id=user_file.fileId left join user on user_file.userId=user.id
	</select>

    <update id="updateMyFile" parameterType="com.xusenme.model.MyFile">
        update file set
        <if test="active!=null">
            active=#{active}
        </if>
        where id = #{id}
    </update>

    <select id="listDir" resultType="com.xusenme.model.MyFile">
        select
            file.id as id,
            file.filename as filename,
            file.size as size,
            file.fastdfsPath as fastdfsPath,
            file.active as active,
            file.folder as folder,
            user_file.dir as dir
        from file left join user_file on file.id = user_file.fileId
        where user_file.userId = #{arg0} and user_file.dir = #{arg1} and isDelete= 0
        <if test="arg2!=null and arg2!=''">
            and file.filename LIKE CONCAT('%',#{arg2},'%')
        </if>
    </select>

    <select id="listRecycle" resultType="com.xusenme.model.MyFile">
        select
            file.id as id,
            file.filename as filename,
            file.size as size,
            file.fastdfsPath as fastdfsPath,
            file.active as active,
            file.folder as folder,
            user_file.dir as dir
        from file left join user_file on file.id = user_file.fileId
        where user_file.userId = #{arg0}  and isDelete= 1
    </select>

    <update id="recoveryFile" parameterType="String">
        update file set isDelete=0 where id = #{id};
    </update>

    <insert id="createFolder">
        insert into file(id,filename,folder) values(#{arg0},#{arg1},1)
    </insert>

    <insert id="publicShare" parameterType="com.xusenme.controller.vo.ShareVo">
        insert into share(shareId,fileId,shareType) values
        <foreach collection="ids" index="index" item="item" open="" separator="," close="">
            (#{shareId},#{item},"public")
        </foreach>
    </insert>

    <insert id="passwordShare" parameterType="com.xusenme.controller.vo.ShareVo">
        insert into share(shareId,fileId,shareType,password) values
        <foreach collection="ids" index="index" item="item" open="" separator="," close="">
            (#{shareId},#{item},"password",#{password})
        </foreach>
    </insert>


    <insert id="privateShare" parameterType="com.xusenme.controller.vo.ShareVo">
        insert into share(shareId,fileId,shareType,email) values
        <foreach collection="ids" index="index" item="item" open="" separator="," close="">
            (#{shareId},#{item},"private",#{email})
        </foreach>
    </insert>

</mapper>
